<<<<<<< HEAD
#!/bin/bash

# Function to display information about a subdomain
display_subdomain_info() {
    subdomain=$1
    domain=$2
    record_type=$(dig +short $subdomain.$domain | awk '{ if (NR == 1) { print $1 }}')
    destination=$(dig +short $subdomain.$domain | awk '{ if (NR == 1) { print $2 }}')
    echo "The subdomain $subdomain is a $record_type record and points to $destination"
}

# Main function
main() {
    domain=$1
    subdomain=$2
    
    if [ -z "$subdomain" ]; then
        display_subdomain_info "www" $domain
        display_subdomain_info "lb-01" $domain
        display_subdomain_info "web-01" $domain
        display_subdomain_info "web-02" $domain
    else
        display_subdomain_info $subdomain $domain
    fi
}

# Check for correct number of arguments
if [ "$#" -lt 1 ]; then
    echo "Usage: $0 <domain> [subdomain]"
    exit 1
=======
#!/usr/bin/env bash
# Bash script that will display information about subdomains.
function domain_check {
	domain_names=("www" "lb-01" "web-01" "web-02")

	for i in "${domain_names[@]}";
	do
		dig "${i}"."$1" | grep -A1 'ANSWER SECTION:' | \
		awk 'FNR == 2 {printf "The subdomain %s is a %s record and points to %s\n", var, $4, $5}' var="$i"
	done
}

function subdomain_check {
	dig "${2}"."$1" | grep -A1 'ANSWER SECTION:' | \
	awk 'FNR == 2 {printf "The subdomain %s is a %s record and points to %s\n", var, $4, $5}' var="$2"
}

if [ $# -lt 1 ]
then
	echo "*** Provide domain name ***"
elif [ $# -eq 1 ]
then
	domain_check "$1";
else
	subdomain_check "$1" "$2";
>>>>>>> b991730f488efb569fb57e58a4009df120f76ed9
fi

main "$@"

